{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2","program":"/Users/andonmitev/.rustup/toolchains/stable-aarch64-apple-darwin/bin/rls","arguments":["--crate-name","jemalloc_sys","/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"background_threads_runtime_support\"","--cfg","feature=\"default\"","-C","metadata=9a5fc043fe70ac8b","-C","extra-filename=-9a5fc043fe70ac8b","--out-dir","/Users/andonmitev/Desktop/RUst/hello_world/target/rls/debug/deps","-L","dependency=/Users/andonmitev/Desktop/RUst/hello_world/target/rls/debug/deps","--extern","libc=/Users/andonmitev/Desktop/RUst/hello_world/target/rls/debug/deps/liblibc-339d123e9a0629e2.rmeta","--cap-lints","allow","-L","native=/Users/andonmitev/Desktop/RUst/hello_world/target/rls/debug/build/jemalloc-sys-d2251fbb9019ee0a/out/build/lib","--cfg","prefixed","-l","static=jemalloc_pic","-l","pthread","--error-format=json","--sysroot","/Users/andonmitev/.rustup/toolchains/stable-aarch64-apple-darwin"],"output":"/Users/andonmitev/Desktop/RUst/hello_world/target/rls/debug/deps/libjemalloc_sys-9a5fc043fe70ac8b.rmeta"},"prelude":{"crate_id":{"name":"jemalloc_sys","disambiguator":[9848429878651928979,6054790916098113264]},"crate_root":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src","external_crates":[{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[5677981802051829033,13623687576168491111]}},{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[12560447239807209171,6398585695143860785]}},{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[12638775034072548080,6787576177321175622]}},{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","num":4,"id":{"name":"libc","disambiguator":[11983020721800544496,1747259745279061538]}}],"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":0,"byte_end":35734,"line_start":1,"line_end":903,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":0,"byte_end":35734,"line_start":1,"line_end":903,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":49},{"krate":0,"index":58},{"krate":0,"index":72},{"krate":0,"index":70},{"krate":0,"index":68},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57}],"decl_id":null,"docs":" Rust bindings to the `jemalloc` C library.","sig":null,"attributes":[{"value":"/ Rust bindings to the `jemalloc` C library.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":0,"byte_end":46,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":47,"byte_end":50,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ `jemalloc` is a general purpose memory allocation, its documentation","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":51,"byte_end":123,"line_start":3,"line_end":3,"column_start":1,"column_end":73}},{"value":"/ can be found here:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":124,"byte_end":146,"line_start":4,"line_end":4,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":147,"byte_end":150,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ * [API documentation][jemalloc_docs]","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":151,"byte_end":191,"line_start":6,"line_end":6,"column_start":1,"column_end":41}},{"value":"/ * [Wiki][jemalloc_wiki] (design documents, presentations, profiling, debugging, tuning, ...)","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":192,"byte_end":288,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":289,"byte_end":292,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ `jemalloc` exposes both a standard and a non-standard API.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":293,"byte_end":355,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":356,"byte_end":359,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Standard API","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":360,"byte_end":378,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":379,"byte_end":382,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The standard API includes: the [`malloc`], [`calloc`], [`realloc`], and","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":383,"byte_end":458,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ [`free`], which conform to to ISO/IEC 9899:1990 (“ISO C90”),","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":459,"byte_end":527,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ [`posix_memalign`] which conforms to conforms to POSIX.1-2016, and","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":528,"byte_end":598,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ [`aligned_alloc`].","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":599,"byte_end":621,"line_start":16,"line_end":16,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":622,"byte_end":625,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that these standard leave some details as _implementation defined_.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":626,"byte_end":702,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ This docs document this behavior for `jemalloc`, but keep in mind that other","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":703,"byte_end":783,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ standard-conforming implementations of these functions in other allocators","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":784,"byte_end":862,"line_start":20,"line_end":20,"column_start":1,"column_end":79}},{"value":"/ might behave slightly different.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":863,"byte_end":899,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":900,"byte_end":903,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ # Non-Standard API","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":904,"byte_end":926,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":927,"byte_end":930,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The non-standard API includes: [`mallocx`], [`rallocx`], [`xallocx`],","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":931,"byte_end":1004,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ [`sallocx`], [`dallocx`], [`sdallocx`], and [`nallocx`]. These functions all","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1005,"byte_end":1085,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ have a `flags` argument that can be used to specify options. Use bitwise or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1086,"byte_end":1165,"line_start":27,"line_end":27,"column_start":1,"column_end":80}},{"value":"/ `|` to specify one or more of the following: [`MALLOCX_LG_ALIGN`],","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1166,"byte_end":1236,"line_start":28,"line_end":28,"column_start":1,"column_end":71}},{"value":"/ [`MALLOCX_ALIGN`], [`MALLOCX_ZERO`], [`MALLOCX_TCACHE`],","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1237,"byte_end":1297,"line_start":29,"line_end":29,"column_start":1,"column_end":61}},{"value":"/ [`MALLOCX_TCACHE_NONE`], and [`MALLOCX_ARENA`].","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1298,"byte_end":1349,"line_start":30,"line_end":30,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1350,"byte_end":1353,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ # Environment variables","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1354,"byte_end":1381,"line_start":32,"line_end":32,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1382,"byte_end":1385,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ The `MALLOC_CONF` environment variable affects the execution of the allocation functions.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1386,"byte_end":1479,"line_start":34,"line_end":34,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1480,"byte_end":1483,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ For the documentation of the [`MALLCTL` namespace visit the jemalloc","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1484,"byte_end":1556,"line_start":36,"line_end":36,"column_start":1,"column_end":73}},{"value":"/ documenation][jemalloc_mallctl].","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1557,"byte_end":1593,"line_start":37,"line_end":37,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1594,"byte_end":1597,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ [jemalloc_docs]: http://jemalloc.net/jemalloc.3.html","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1598,"byte_end":1654,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ [jemalloc_wiki]: https://github.com/jemalloc/jemalloc/wiki","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1655,"byte_end":1717,"line_start":40,"line_end":40,"column_start":1,"column_end":63}},{"value":"/ [jemalloc_mallctl]: http://jemalloc.net/jemalloc.3.html#mallctl_namespace","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1718,"byte_end":1795,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"no_std","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1796,"byte_end":1806,"line_start":42,"line_end":42,"column_start":1,"column_end":11}},{"value":"allow(non_snake_case, non_camel_case_types)","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1807,"byte_end":1854,"line_start":43,"line_end":43,"column_start":1,"column_end":48}},{"value":"deny(missing_docs, intra_doc_link_resolution_failure)","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":1973,"byte_end":2030,"line_start":48,"line_end":48,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":22},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2317,"byte_end":2333,"line_start":62,"line_end":62,"column_start":8,"column_end":24},"name":"MALLOCX_LG_ALIGN","qualname":"::MALLOCX_LG_ALIGN","value":"pub fn MALLOCX_LG_ALIGN(usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Align the memory allocation to start at an address that is a\n multiple of `1 << la`.","sig":null,"attributes":[{"value":"/ Align the memory allocation to start at an address that is a","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2125,"byte_end":2189,"line_start":55,"line_end":55,"column_start":1,"column_end":65}},{"value":"/ multiple of `1 << la`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2190,"byte_end":2216,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2221,"byte_end":2233,"line_start":58,"line_end":58,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2234,"byte_end":2237,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ It does not validate that `la` is within the valid range.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2238,"byte_end":2299,"line_start":60,"line_end":60,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2300,"byte_end":2309,"line_start":61,"line_end":61,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":23},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2587,"byte_end":2600,"line_start":73,"line_end":73,"column_start":8,"column_end":21},"name":"MALLOCX_ALIGN","qualname":"::MALLOCX_ALIGN","value":"pub fn MALLOCX_ALIGN(usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Align the memory allocation to start at an address that is a multiple of `align`,\n where a is a power of two.","sig":null,"attributes":[{"value":"/ Align the memory allocation to start at an address that is a multiple of `align`,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2375,"byte_end":2460,"line_start":66,"line_end":66,"column_start":1,"column_end":86}},{"value":"/ where a is a power of two.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2461,"byte_end":2491,"line_start":67,"line_end":67,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2492,"byte_end":2495,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2496,"byte_end":2508,"line_start":69,"line_end":69,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2509,"byte_end":2512,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ This macro does not validate that a is a power of 2.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2513,"byte_end":2569,"line_start":71,"line_end":71,"column_start":1,"column_end":57}},{"value":"inline","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2570,"byte_end":2579,"line_start":72,"line_end":72,"column_start":1,"column_end":10}}]},{"kind":"Const","id":{"krate":0,"index":24},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2997,"byte_end":3009,"line_start":84,"line_end":84,"column_start":11,"column_end":23},"name":"MALLOCX_ZERO","qualname":"::MALLOCX_ZERO","value":"c_int","parent":null,"children":[],"decl_id":null,"docs":" Initialize newly allocated memory to contain zero bytes.","sig":null,"attributes":[{"value":"/ Initialize newly allocated memory to contain zero bytes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2665,"byte_end":2725,"line_start":77,"line_end":77,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2726,"byte_end":2729,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ In the growing reallocation case, the real size prior to reallocation","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2730,"byte_end":2803,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ defines the boundary between untouched bytes and those that are initialized","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2804,"byte_end":2883,"line_start":80,"line_end":80,"column_start":1,"column_end":80}},{"value":"/ to contain zero bytes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2884,"byte_end":2910,"line_start":81,"line_end":81,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2911,"byte_end":2914,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ If this option is not set, newly allocated memory is uninitialized.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":2915,"byte_end":2986,"line_start":83,"line_end":83,"column_start":1,"column_end":72}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3285,"byte_end":3299,"line_start":93,"line_end":93,"column_start":8,"column_end":22},"name":"MALLOCX_TCACHE","qualname":"::MALLOCX_TCACHE","value":"pub fn MALLOCX_TCACHE(usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Use the thread-specific cache (_tcache_) specified by the identifier `tc`.","sig":null,"attributes":[{"value":"/ Use the thread-specific cache (_tcache_) specified by the identifier `tc`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3026,"byte_end":3104,"line_start":86,"line_end":86,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3105,"byte_end":3108,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3109,"byte_end":3121,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3122,"byte_end":3125,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ `tc` must have been acquired via the `tcache.create mallctl`. This function","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3126,"byte_end":3205,"line_start":90,"line_end":90,"column_start":1,"column_end":80}},{"value":"/ does not validate that `tc` specifies a valid identifier.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3206,"byte_end":3267,"line_start":91,"line_end":91,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3268,"byte_end":3277,"line_start":92,"line_end":92,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":26},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3742,"byte_end":3761,"line_start":108,"line_end":108,"column_start":8,"column_end":27},"name":"MALLOCX_TCACHE_NONE","qualname":"::MALLOCX_TCACHE_NONE","value":"pub fn MALLOCX_TCACHE_NONE() -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Do not use a thread-specific cache (_tcache_).","sig":null,"attributes":[{"value":"/ Do not use a thread-specific cache (_tcache_).","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3373,"byte_end":3423,"line_start":97,"line_end":97,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3424,"byte_end":3427,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ Unless `MALLOCX_TCACHE(tc)` or `MALLOCX_TCACHE_NONE` is specified, an","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3428,"byte_end":3501,"line_start":99,"line_end":99,"column_start":1,"column_end":74}},{"value":"/ automatically managed _tcache_ will be used under many circumstances.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3502,"byte_end":3575,"line_start":100,"line_end":100,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3576,"byte_end":3579,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3580,"byte_end":3592,"line_start":102,"line_end":102,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3593,"byte_end":3596,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ This option cannot be used in the same `flags` argument as","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3597,"byte_end":3659,"line_start":104,"line_end":104,"column_start":1,"column_end":63}},{"value":"/ `MALLOCX_TCACHE(tc)`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3660,"byte_end":3685,"line_start":105,"line_end":105,"column_start":1,"column_end":26}},{"value":"inline","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3725,"byte_end":3734,"line_start":107,"line_end":107,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":27},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4092,"byte_end":4105,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"MALLOCX_ARENA","qualname":"::MALLOCX_ARENA","value":"pub fn MALLOCX_ARENA(usize) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Use the arena specified by the index `a`.","sig":null,"attributes":[{"value":"/ Use the arena specified by the index `a`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3801,"byte_end":3846,"line_start":112,"line_end":112,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3847,"byte_end":3850,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ This option has no effect for regions that were allocated via an arena other","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3851,"byte_end":3931,"line_start":114,"line_end":114,"column_start":1,"column_end":81}},{"value":"/ than the one specified.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3932,"byte_end":3959,"line_start":115,"line_end":115,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3960,"byte_end":3963,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3964,"byte_end":3976,"line_start":117,"line_end":117,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3977,"byte_end":3980,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ This function does not validate that `a` specifies an arena index in the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":3981,"byte_end":4057,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ valid range.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4058,"byte_end":4074,"line_start":120,"line_end":120,"column_start":1,"column_end":17}},{"value":"inline","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4075,"byte_end":4084,"line_start":121,"line_end":121,"column_start":1,"column_end":10}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":29},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5103,"byte_end":5109,"line_start":144,"line_end":144,"column_start":12,"column_end":18},"name":"malloc","qualname":"::malloc","value":"pub unsafe extern \"C\" fn malloc(size: size_t) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocates `size` bytes of uninitialized memory.","sig":null,"attributes":[{"value":"/ Allocates `size` bytes of uninitialized memory.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4197,"byte_end":4248,"line_start":127,"line_end":127,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4253,"byte_end":4256,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ It returns a pointer to the start (lowest byte address) of the allocated","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4261,"byte_end":4337,"line_start":129,"line_end":129,"column_start":5,"column_end":81}},{"value":"/ space. This pointer is suitably aligned so that it may be assigned to a","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4342,"byte_end":4417,"line_start":130,"line_end":130,"column_start":5,"column_end":80}},{"value":"/ pointer to any type of object and then used to access such an object in","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4422,"byte_end":4497,"line_start":131,"line_end":131,"column_start":5,"column_end":80}},{"value":"/ the space allocated until the space is explicitly deallocated. Each","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4502,"byte_end":4573,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ yielded pointer points to an object disjoint from any other object.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4578,"byte_end":4649,"line_start":133,"line_end":133,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4654,"byte_end":4657,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ If the `size` of the space requested is zero, either a null pointer is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4662,"byte_end":4736,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ returned, or the behavior is as if the `size` were some nonzero value,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4741,"byte_end":4815,"line_start":136,"line_end":136,"column_start":5,"column_end":79}},{"value":"/ except that the returned pointer shall not be used to access an object.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4820,"byte_end":4895,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4900,"byte_end":4903,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4908,"byte_end":4920,"line_start":139,"line_end":139,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4925,"byte_end":4928,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ If the space cannot be allocated, a null pointer is returned and `errno`","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":4933,"byte_end":5009,"line_start":141,"line_end":141,"column_start":5,"column_end":81}},{"value":"/ is set to `ENOMEM`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5014,"byte_end":5037,"line_start":142,"line_end":142,"column_start":5,"column_end":28}},{"value":"link_name = \"_rjem_malloc\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5063,"byte_end":5089,"line_start":143,"line_end":143,"column_start":26,"column_end":52}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":30},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5669,"byte_end":5675,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"calloc","qualname":"::calloc","value":"pub unsafe extern \"C\" fn calloc(number: size_t, size: size_t) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocates zero-initialized space for an array of `number` objects, each\n of whose size is `size`.","sig":null,"attributes":[{"value":"/ Allocates zero-initialized space for an array of `number` objects, each","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5144,"byte_end":5219,"line_start":145,"line_end":145,"column_start":5,"column_end":80}},{"value":"/ of whose size is `size`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5224,"byte_end":5252,"line_start":146,"line_end":146,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5257,"byte_end":5260,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The result is identical to calling [`malloc`] with an argument of","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5265,"byte_end":5334,"line_start":148,"line_end":148,"column_start":5,"column_end":74}},{"value":"/ `number * size`, with the exception that the allocated memory is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5339,"byte_end":5407,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/ explicitly initialized to _zero_ bytes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5412,"byte_end":5455,"line_start":150,"line_end":150,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5460,"byte_end":5463,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Note: zero-initialized memory need not be the same as the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5468,"byte_end":5529,"line_start":152,"line_end":152,"column_start":5,"column_end":66}},{"value":"/ representation of floating-point zero or a null pointer constant.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5534,"byte_end":5603,"line_start":153,"line_end":153,"column_start":5,"column_end":74}},{"value":"link_name = \"_rjem_calloc\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5629,"byte_end":5655,"line_start":154,"line_end":154,"column_start":26,"column_end":52}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":31},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6665,"byte_end":6679,"line_start":179,"line_end":179,"column_start":12,"column_end":26},"name":"posix_memalign","qualname":"::posix_memalign","value":"pub unsafe extern \"C\" fn posix_memalign(ptr: *mut *mut c_void,\n                                        alignment: size_t, size: size_t)\n-> c_int","parent":null,"children":[],"decl_id":null,"docs":" Allocates `size` bytes of memory at an address which is a multiple of\n `alignment` and is placed in `*ptr`.","sig":null,"attributes":[{"value":"/ Allocates `size` bytes of memory at an address which is a multiple of","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5727,"byte_end":5800,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ `alignment` and is placed in `*ptr`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5805,"byte_end":5845,"line_start":158,"line_end":158,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5850,"byte_end":5853,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ If `size` is zero, then the value placed in `*ptr` is either null, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5858,"byte_end":5931,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ the behavior is as if the `size` were some nonzero value, except that","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":5936,"byte_end":6009,"line_start":161,"line_end":161,"column_start":5,"column_end":78}},{"value":"/ the returned pointer shall not be used to access an object.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6014,"byte_end":6077,"line_start":162,"line_end":162,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6082,"byte_end":6085,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6090,"byte_end":6102,"line_start":164,"line_end":164,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6107,"byte_end":6110,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ On success, it returns zero. On error, the value of `errno` is _not_ set,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6115,"byte_end":6192,"line_start":166,"line_end":166,"column_start":5,"column_end":82}},{"value":"/ `*ptr` is not modified, and the return values can be:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6197,"byte_end":6254,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6259,"byte_end":6262,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ - `EINVAL`: the `alignment` argument was not a power-of-two or was not a multiple of","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6267,"byte_end":6355,"line_start":169,"line_end":169,"column_start":5,"column_end":93}},{"value":"/   `mem::size_of::<*const c_void>()`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6360,"byte_end":6400,"line_start":170,"line_end":170,"column_start":5,"column_end":45}},{"value":"/ - `ENOMEM`: there was insufficient memory to fulfill the allocation request.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6405,"byte_end":6485,"line_start":171,"line_end":171,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6490,"byte_end":6493,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6498,"byte_end":6510,"line_start":173,"line_end":173,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6515,"byte_end":6518,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6523,"byte_end":6558,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6563,"byte_end":6566,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ * `ptr` is null.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6571,"byte_end":6591,"line_start":177,"line_end":177,"column_start":5,"column_end":25}},{"value":"link_name = \"_rjem_posix_memalign\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6617,"byte_end":6651,"line_start":178,"line_end":178,"column_start":26,"column_end":60}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":32},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7425,"byte_end":7438,"line_start":199,"line_end":199,"column_start":12,"column_end":25},"name":"aligned_alloc","qualname":"::aligned_alloc","value":"pub unsafe extern \"C\" fn aligned_alloc(alignment: size_t, size: size_t)\n-> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocates `size` bytes of memory at an address which is a multiple of\n `alignment`.","sig":null,"attributes":[{"value":"/ Allocates `size` bytes of memory at an address which is a multiple of","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6751,"byte_end":6824,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ `alignment`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6829,"byte_end":6845,"line_start":182,"line_end":182,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6850,"byte_end":6853,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the `size` of the space requested is zero, either a null pointer is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6858,"byte_end":6932,"line_start":184,"line_end":184,"column_start":5,"column_end":79}},{"value":"/ returned, or the behavior is as if the `size` were some nonzero value,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":6937,"byte_end":7011,"line_start":185,"line_end":185,"column_start":5,"column_end":79}},{"value":"/ except that the returned pointer shall not be used to access an object.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7016,"byte_end":7091,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7096,"byte_end":7099,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7104,"byte_end":7116,"line_start":188,"line_end":188,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7121,"byte_end":7124,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Returns null if the request fails.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7129,"byte_end":7167,"line_start":190,"line_end":190,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7172,"byte_end":7175,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7180,"byte_end":7192,"line_start":192,"line_end":192,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7197,"byte_end":7200,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7205,"byte_end":7240,"line_start":194,"line_end":194,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7245,"byte_end":7248,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ * `alignment` is not a power-of-two","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7253,"byte_end":7292,"line_start":196,"line_end":196,"column_start":5,"column_end":44}},{"value":"/ * `size` is not an integral multiple of `alignment`","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7297,"byte_end":7352,"line_start":197,"line_end":197,"column_start":5,"column_end":60}},{"value":"link_name = \"_rjem_aligned_alloc\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7378,"byte_end":7411,"line_start":198,"line_end":198,"column_start":26,"column_end":59}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":33},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9192,"byte_end":9199,"line_start":238,"line_end":238,"column_start":12,"column_end":19},"name":"realloc","qualname":"::realloc","value":"pub unsafe extern \"C\" fn realloc(ptr: *mut c_void, size: size_t)\n-> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Resizes the previously-allocated memory region referenced by `ptr` to\n `size` bytes.","sig":null,"attributes":[{"value":"/ Resizes the previously-allocated memory region referenced by `ptr` to","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7493,"byte_end":7566,"line_start":201,"line_end":201,"column_start":5,"column_end":78}},{"value":"/ `size` bytes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7571,"byte_end":7588,"line_start":202,"line_end":202,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7593,"byte_end":7596,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Deallocates the old object pointed to by `ptr` and returns a pointer to","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7601,"byte_end":7676,"line_start":204,"line_end":204,"column_start":5,"column_end":80}},{"value":"/ a new object that has the size specified by `size`. The contents of the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7681,"byte_end":7756,"line_start":205,"line_end":205,"column_start":5,"column_end":80}},{"value":"/ new object are the same as that of the old object prior to deallocation,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7761,"byte_end":7837,"line_start":206,"line_end":206,"column_start":5,"column_end":81}},{"value":"/ up to the lesser of the new and old sizes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7842,"byte_end":7888,"line_start":207,"line_end":207,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7893,"byte_end":7896,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ The memory in the new object beyond the size of the old object is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7901,"byte_end":7970,"line_start":209,"line_end":209,"column_start":5,"column_end":74}},{"value":"/ uninitialized.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7975,"byte_end":7993,"line_start":210,"line_end":210,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":7998,"byte_end":8001,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ The returned pointer to a new object may have the same value as a","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8006,"byte_end":8075,"line_start":212,"line_end":212,"column_start":5,"column_end":74}},{"value":"/ pointer to the old object, but [`realloc`] may move the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8080,"byte_end":8146,"line_start":213,"line_end":213,"column_start":5,"column_end":71}},{"value":"/ allocation, resulting in a different return value than `ptr`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8151,"byte_end":8216,"line_start":214,"line_end":214,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8221,"byte_end":8224,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ If `ptr` is null, [`realloc`] behaves identically to [`malloc`] for the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8229,"byte_end":8304,"line_start":216,"line_end":216,"column_start":5,"column_end":80}},{"value":"/ specified size.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8309,"byte_end":8328,"line_start":217,"line_end":217,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8333,"byte_end":8336,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ If the size of the space requested is zero, the behavior is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8341,"byte_end":8404,"line_start":219,"line_end":219,"column_start":5,"column_end":68}},{"value":"/ implementation-defined: either a null pointer is returned, or the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8409,"byte_end":8478,"line_start":220,"line_end":220,"column_start":5,"column_end":74}},{"value":"/ behavior is as if the size were some nonzero value, except that the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8483,"byte_end":8554,"line_start":221,"line_end":221,"column_start":5,"column_end":76}},{"value":"/ returned pointer shall not be used to access an object # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8559,"byte_end":8626,"line_start":222,"line_end":222,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8631,"byte_end":8634,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8639,"byte_end":8651,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8656,"byte_end":8659,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ If memory for the new object cannot be allocated, the old object is not","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8664,"byte_end":8739,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/ deallocated, its value is unchanged, [`realloc`] returns null, and","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8744,"byte_end":8814,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ `errno` is set to `ENOMEM`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8819,"byte_end":8850,"line_start":228,"line_end":228,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8855,"byte_end":8858,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8863,"byte_end":8875,"line_start":230,"line_end":230,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8880,"byte_end":8883,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8888,"byte_end":8923,"line_start":232,"line_end":232,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8928,"byte_end":8931,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ * `ptr` does not match a pointer previously returned by the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":8936,"byte_end":9006,"line_start":234,"line_end":234,"column_start":5,"column_end":75}},{"value":"/   allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9011,"byte_end":9055,"line_start":235,"line_end":235,"column_start":5,"column_end":49}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9060,"byte_end":9125,"line_start":236,"line_end":236,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_realloc\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9151,"byte_end":9178,"line_start":237,"line_end":237,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":34},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9783,"byte_end":9787,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"free","qualname":"::free","value":"pub unsafe extern \"C\" fn free(ptr: *mut c_void)","parent":null,"children":[],"decl_id":null,"docs":" Deallocates previously-allocated memory region referenced by `ptr`.","sig":null,"attributes":[{"value":"/ Deallocates previously-allocated memory region referenced by `ptr`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9253,"byte_end":9324,"line_start":240,"line_end":240,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9329,"byte_end":9332,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ This makes the space available for future allocations.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9337,"byte_end":9395,"line_start":242,"line_end":242,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9400,"byte_end":9403,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ If `ptr` is null, no action occurs.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9408,"byte_end":9447,"line_start":244,"line_end":244,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9452,"byte_end":9455,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9460,"byte_end":9472,"line_start":246,"line_end":246,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9477,"byte_end":9480,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9485,"byte_end":9520,"line_start":248,"line_end":248,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9525,"byte_end":9528,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ * `ptr` does not match a pointer earlier returned by the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9533,"byte_end":9600,"line_start":250,"line_end":250,"column_start":5,"column_end":72}},{"value":"/   allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9605,"byte_end":9649,"line_start":251,"line_end":251,"column_start":5,"column_end":49}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9654,"byte_end":9719,"line_start":252,"line_end":252,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_free\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9745,"byte_end":9769,"line_start":253,"line_end":253,"column_start":26,"column_end":50}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":35},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10654,"byte_end":10661,"line_start":274,"line_end":274,"column_start":12,"column_end":19},"name":"mallocx","qualname":"::mallocx","value":"pub unsafe extern \"C\" fn mallocx(size: size_t, flags: c_int) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Allocates at least `size` bytes of memory according to `flags`.","sig":null,"attributes":[{"value":"/ Allocates at least `size` bytes of memory according to `flags`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9812,"byte_end":9879,"line_start":256,"line_end":256,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9884,"byte_end":9887,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ It returns a pointer to the start (lowest byte address) of the allocated","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9892,"byte_end":9968,"line_start":258,"line_end":258,"column_start":5,"column_end":81}},{"value":"/ space. This pointer is suitably aligned so that it may be assigned to a","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":9973,"byte_end":10048,"line_start":259,"line_end":259,"column_start":5,"column_end":80}},{"value":"/ pointer to any type of object and then used to access such an object in","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10053,"byte_end":10128,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/ the space allocated until the space is explicitly deallocated. Each","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10133,"byte_end":10204,"line_start":261,"line_end":261,"column_start":5,"column_end":76}},{"value":"/ yielded pointer points to an object disjoint from any other object.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10209,"byte_end":10280,"line_start":262,"line_end":262,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10285,"byte_end":10288,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10293,"byte_end":10305,"line_start":264,"line_end":264,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10310,"byte_end":10313,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ On success it returns a non-null pointer. A null pointer return value","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10318,"byte_end":10391,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ indicates that insufficient contiguous memory was available to service","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10396,"byte_end":10470,"line_start":267,"line_end":267,"column_start":5,"column_end":79}},{"value":"/ the allocation request.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10475,"byte_end":10502,"line_start":268,"line_end":268,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10507,"byte_end":10510,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10515,"byte_end":10527,"line_start":270,"line_end":270,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10532,"byte_end":10535,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if `size == 0`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10540,"byte_end":10587,"line_start":272,"line_end":272,"column_start":5,"column_end":52}},{"value":"link_name = \"_rjem_mallocx\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10613,"byte_end":10640,"line_start":273,"line_end":273,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":36},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12166,"byte_end":12173,"line_start":307,"line_end":307,"column_start":12,"column_end":19},"name":"rallocx","qualname":"::rallocx","value":"pub unsafe extern \"C\" fn rallocx(ptr: *mut c_void, size: size_t, flags: c_int)\n-> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Resizes the previously-allocated memory region referenced by `ptr` to be\n at least `size` bytes.","sig":null,"attributes":[{"value":"/ Resizes the previously-allocated memory region referenced by `ptr` to be","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10711,"byte_end":10787,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/ at least `size` bytes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10792,"byte_end":10818,"line_start":277,"line_end":277,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10823,"byte_end":10826,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Deallocates the old object pointed to by `ptr` and returns a pointer to","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10831,"byte_end":10906,"line_start":279,"line_end":279,"column_start":5,"column_end":80}},{"value":"/ a new object that has the size specified by `size`. The contents of the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10911,"byte_end":10986,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/ new object are the same as that of the old object prior to deallocation,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":10991,"byte_end":11067,"line_start":281,"line_end":281,"column_start":5,"column_end":81}},{"value":"/ up to the lesser of the new and old sizes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11072,"byte_end":11118,"line_start":282,"line_end":282,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11123,"byte_end":11126,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The the memory in the new object beyond the size of the old object is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11131,"byte_end":11204,"line_start":284,"line_end":284,"column_start":5,"column_end":78}},{"value":"/ obtained according to `flags` (it might be uninitialized).","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11209,"byte_end":11271,"line_start":285,"line_end":285,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11276,"byte_end":11279,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ The returned pointer to a new object may have the same value as a","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11284,"byte_end":11353,"line_start":287,"line_end":287,"column_start":5,"column_end":74}},{"value":"/ pointer to the old object, but [`rallocx`] may move the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11358,"byte_end":11424,"line_start":288,"line_end":288,"column_start":5,"column_end":71}},{"value":"/ allocation, resulting in a different return value than `ptr`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11429,"byte_end":11494,"line_start":289,"line_end":289,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11499,"byte_end":11502,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11507,"byte_end":11519,"line_start":291,"line_end":291,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11524,"byte_end":11527,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ On success it returns a non-null pointer. A null pointer return value","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11532,"byte_end":11605,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ indicates that insufficient contiguous memory was available to service","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11610,"byte_end":11684,"line_start":294,"line_end":294,"column_start":5,"column_end":79}},{"value":"/ the allocation request. In this case, the old object is not","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11689,"byte_end":11752,"line_start":295,"line_end":295,"column_start":5,"column_end":68}},{"value":"/ deallocated, and its value is unchanged.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11757,"byte_end":11801,"line_start":296,"line_end":296,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11806,"byte_end":11809,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11814,"byte_end":11826,"line_start":298,"line_end":298,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11831,"byte_end":11834,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefiend_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11839,"byte_end":11874,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11879,"byte_end":11882,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ * `size == 0`, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11887,"byte_end":11908,"line_start":302,"line_end":302,"column_start":5,"column_end":26}},{"value":"/ * `ptr` does not match a pointer earlier returned by","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11913,"byte_end":11969,"line_start":303,"line_end":303,"column_start":5,"column_end":61}},{"value":"/   the memory allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":11974,"byte_end":12029,"line_start":304,"line_end":304,"column_start":5,"column_end":60}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12034,"byte_end":12099,"line_start":305,"line_end":305,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_rallocx\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12125,"byte_end":12152,"line_start":306,"line_end":306,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":37},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13970,"byte_end":13977,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"xallocx","qualname":"::xallocx","value":"pub unsafe extern \"C\" fn xallocx(ptr: *mut c_void, size: size_t,\n                                 extra: size_t, flags: c_int) -> size_t","parent":null,"children":[],"decl_id":null,"docs":" Resizes the previously-allocated memory region referenced by `ptr` _in\n place_ to be at least `size` bytes, returning the real size of the\n allocation.","sig":null,"attributes":[{"value":"/ Resizes the previously-allocated memory region referenced by `ptr` _in","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12241,"byte_end":12315,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ place_ to be at least `size` bytes, returning the real size of the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12320,"byte_end":12390,"line_start":310,"line_end":310,"column_start":5,"column_end":75}},{"value":"/ allocation.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12395,"byte_end":12410,"line_start":311,"line_end":311,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12415,"byte_end":12418,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Deallocates the old object pointed to by `ptr` and sets `ptr` to a new","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12423,"byte_end":12497,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ object that has the size returned; the old a new objects share the same","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12502,"byte_end":12577,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ base address. The contents of the new object are the same as that of the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12582,"byte_end":12658,"line_start":315,"line_end":315,"column_start":5,"column_end":81}},{"value":"/ old object prior to deallocation, up to the lesser of the new and old","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12663,"byte_end":12736,"line_start":316,"line_end":316,"column_start":5,"column_end":78}},{"value":"/ sizes.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12741,"byte_end":12751,"line_start":317,"line_end":317,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12756,"byte_end":12759,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ If `extra` is non-zero, an attempt is made to resize the allocation to","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12764,"byte_end":12838,"line_start":319,"line_end":319,"column_start":5,"column_end":79}},{"value":"/ be at least `size + extra` bytes. Inability to allocate the `extra`","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12843,"byte_end":12914,"line_start":320,"line_end":320,"column_start":5,"column_end":76}},{"value":"/ bytes will not by itself result in failure to resize.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12919,"byte_end":12976,"line_start":321,"line_end":321,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12981,"byte_end":12984,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The memory in the new object beyond the size of the old object is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":12989,"byte_end":13058,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ obtained according to `flags` (it might be uninitialized).","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13063,"byte_end":13125,"line_start":324,"line_end":324,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13130,"byte_end":13133,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13138,"byte_end":13150,"line_start":326,"line_end":326,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13155,"byte_end":13158,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ If the allocation cannot be adequately grown in place up to `size`, the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13163,"byte_end":13238,"line_start":328,"line_end":328,"column_start":5,"column_end":80}},{"value":"/ size returned is smaller than `size`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13243,"byte_end":13284,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13289,"byte_end":13292,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ Note:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13297,"byte_end":13306,"line_start":331,"line_end":331,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13311,"byte_end":13314,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ * the size value returned can be larger than the size requested during","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13319,"byte_end":13393,"line_start":333,"line_end":333,"column_start":5,"column_end":79}},{"value":"/   allocation","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13398,"byte_end":13414,"line_start":334,"line_end":334,"column_start":5,"column_end":21}},{"value":"/ * when shrinking an allocation, use the size returned to determine","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13419,"byte_end":13489,"line_start":335,"line_end":335,"column_start":5,"column_end":75}},{"value":"/   whether the allocation was shrunk sufficiently or not.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13494,"byte_end":13554,"line_start":336,"line_end":336,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13559,"byte_end":13562,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13567,"byte_end":13579,"line_start":338,"line_end":338,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13584,"byte_end":13587,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13592,"byte_end":13627,"line_start":340,"line_end":340,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13632,"byte_end":13635,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ * `size == 0`, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13640,"byte_end":13661,"line_start":342,"line_end":342,"column_start":5,"column_end":26}},{"value":"/ * `size + extra > size_t::max_value()`, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13666,"byte_end":13712,"line_start":343,"line_end":343,"column_start":5,"column_end":51}},{"value":"/ * `ptr` does not match a pointer earlier returned by the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13717,"byte_end":13784,"line_start":344,"line_end":344,"column_start":5,"column_end":72}},{"value":"/   allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13789,"byte_end":13833,"line_start":345,"line_end":345,"column_start":5,"column_end":49}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13838,"byte_end":13903,"line_start":346,"line_end":346,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_xallocx\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":13929,"byte_end":13956,"line_start":347,"line_end":347,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":38},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14569,"byte_end":14576,"line_start":363,"line_end":363,"column_start":12,"column_end":19},"name":"sallocx","qualname":"::sallocx","value":"pub unsafe extern \"C\" fn sallocx(ptr: *const c_void, flags: c_int) -> size_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the real size of the previously-allocated memory region\n referenced by `ptr`.","sig":null,"attributes":[{"value":"/ Returns the real size of the previously-allocated memory region","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14055,"byte_end":14122,"line_start":350,"line_end":350,"column_start":5,"column_end":72}},{"value":"/ referenced by `ptr`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14127,"byte_end":14151,"line_start":351,"line_end":351,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14156,"byte_end":14159,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ The value may be larger than the size requested on allocation.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14164,"byte_end":14230,"line_start":353,"line_end":353,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14235,"byte_end":14238,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14243,"byte_end":14255,"line_start":355,"line_end":355,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14260,"byte_end":14263,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14268,"byte_end":14303,"line_start":357,"line_end":357,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14308,"byte_end":14311,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ * `ptr` does not match a pointer earlier returned by the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14316,"byte_end":14383,"line_start":359,"line_end":359,"column_start":5,"column_end":72}},{"value":"/   allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14388,"byte_end":14432,"line_start":360,"line_end":360,"column_start":5,"column_end":49}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14437,"byte_end":14502,"line_start":361,"line_end":361,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_sallocx\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14528,"byte_end":14555,"line_start":362,"line_end":362,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":39},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15160,"byte_end":15167,"line_start":379,"line_end":379,"column_start":12,"column_end":19},"name":"dallocx","qualname":"::dallocx","value":"pub unsafe extern \"C\" fn dallocx(ptr: *mut c_void, flags: c_int)","parent":null,"children":[],"decl_id":null,"docs":" Deallocates previously-allocated memory region referenced by `ptr`.","sig":null,"attributes":[{"value":"/ Deallocates previously-allocated memory region referenced by `ptr`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14627,"byte_end":14698,"line_start":365,"line_end":365,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14703,"byte_end":14706,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This makes the space available for future allocations.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14711,"byte_end":14769,"line_start":367,"line_end":367,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14774,"byte_end":14777,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If `ptr` is null, no action occurs.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14782,"byte_end":14821,"line_start":369,"line_end":369,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14826,"byte_end":14829,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14834,"byte_end":14846,"line_start":371,"line_end":371,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14851,"byte_end":14854,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14859,"byte_end":14894,"line_start":373,"line_end":373,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14899,"byte_end":14902,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ * `ptr` does not match a pointer earlier returned by the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14907,"byte_end":14974,"line_start":375,"line_end":375,"column_start":5,"column_end":72}},{"value":"/   allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":14979,"byte_end":15023,"line_start":376,"line_end":376,"column_start":5,"column_end":49}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15028,"byte_end":15093,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_dallocx\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15119,"byte_end":15146,"line_start":378,"line_end":378,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":40},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16013,"byte_end":16021,"line_start":400,"line_end":400,"column_start":12,"column_end":20},"name":"sdallocx","qualname":"::sdallocx","value":"pub unsafe extern \"C\" fn sdallocx(ptr: *mut c_void, size: size_t,\n                                  flags: c_int)","parent":null,"children":[],"decl_id":null,"docs":" Deallocates previously-allocated memory region referenced by `ptr` with\n `size` hint.","sig":null,"attributes":[{"value":"/ Deallocates previously-allocated memory region referenced by `ptr` with","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15206,"byte_end":15281,"line_start":381,"line_end":381,"column_start":5,"column_end":80}},{"value":"/ `size` hint.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15286,"byte_end":15302,"line_start":382,"line_end":382,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15307,"byte_end":15310,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ This makes the space available for future allocations.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15315,"byte_end":15373,"line_start":384,"line_end":384,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15378,"byte_end":15381,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ If `ptr` is null, no action occurs.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15386,"byte_end":15425,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15430,"byte_end":15433,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15438,"byte_end":15450,"line_start":388,"line_end":388,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15455,"byte_end":15458,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15463,"byte_end":15498,"line_start":390,"line_end":390,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15503,"byte_end":15506,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ * `size` is not in range `[req_size, alloc_size]`, where `req_size` is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15511,"byte_end":15585,"line_start":392,"line_end":392,"column_start":5,"column_end":79}},{"value":"/ the size requested when performing the allocation, and `alloc_size` is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15590,"byte_end":15664,"line_start":393,"line_end":393,"column_start":5,"column_end":79}},{"value":"/ the allocation size returned by [`nallocx`], [`sallocx`], or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15669,"byte_end":15733,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/ [`xallocx`],","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15738,"byte_end":15754,"line_start":395,"line_end":395,"column_start":5,"column_end":21}},{"value":"/ * `ptr` does not match a pointer earlier returned by the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15759,"byte_end":15826,"line_start":396,"line_end":396,"column_start":5,"column_end":72}},{"value":"/   allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15831,"byte_end":15875,"line_start":397,"line_end":397,"column_start":5,"column_end":49}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15880,"byte_end":15945,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_sdallocx\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":15971,"byte_end":15999,"line_start":399,"line_end":399,"column_start":26,"column_end":54}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":41},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16490,"byte_end":16497,"line_start":414,"line_end":414,"column_start":12,"column_end":19},"name":"nallocx","qualname":"::nallocx","value":"pub unsafe extern \"C\" fn nallocx(size: size_t, flags: c_int) -> size_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the real size of the allocation that would result from a\n [`mallocx`] function call with the same arguments.","sig":null,"attributes":[{"value":"/ Returns the real size of the allocation that would result from a","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16074,"byte_end":16142,"line_start":402,"line_end":402,"column_start":5,"column_end":73}},{"value":"/ [`mallocx`] function call with the same arguments.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16147,"byte_end":16201,"line_start":403,"line_end":403,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16206,"byte_end":16209,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16214,"byte_end":16226,"line_start":405,"line_end":405,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16231,"byte_end":16234,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ If the inputs exceed the maximum supported size class and/or alignment","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16239,"byte_end":16313,"line_start":407,"line_end":407,"column_start":5,"column_end":79}},{"value":"/ it returns zero.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16318,"byte_end":16338,"line_start":408,"line_end":408,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16343,"byte_end":16346,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16351,"byte_end":16363,"line_start":410,"line_end":410,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16368,"byte_end":16371,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if `size == 0`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16376,"byte_end":16423,"line_start":412,"line_end":412,"column_start":5,"column_end":52}},{"value":"link_name = \"_rjem_nallocx\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16449,"byte_end":16476,"line_start":413,"line_end":413,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":42},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17465,"byte_end":17483,"line_start":439,"line_end":439,"column_start":12,"column_end":30},"name":"malloc_usable_size","qualname":"::malloc_usable_size","value":"pub unsafe extern \"C\" fn malloc_usable_size(ptr: *const c_void) -> size_t","parent":null,"children":[],"decl_id":null,"docs":" Returns the real size of the previously-allocated memory region\n referenced by `ptr`.","sig":null,"attributes":[{"value":"/ Returns the real size of the previously-allocated memory region","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16542,"byte_end":16609,"line_start":416,"line_end":416,"column_start":5,"column_end":72}},{"value":"/ referenced by `ptr`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16614,"byte_end":16638,"line_start":417,"line_end":417,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16643,"byte_end":16646,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ The value may be larger than the size requested on allocation.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16651,"byte_end":16717,"line_start":419,"line_end":419,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16722,"byte_end":16725,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ Although the excess bytes can be overwritten by the application without","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16730,"byte_end":16805,"line_start":421,"line_end":421,"column_start":5,"column_end":80}},{"value":"/ ill effects, this is not good programming practice: the number of excess","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16810,"byte_end":16886,"line_start":422,"line_end":422,"column_start":5,"column_end":81}},{"value":"/ bytes in an allocation depends on the underlying implementation.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16891,"byte_end":16959,"line_start":423,"line_end":423,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16964,"byte_end":16967,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The main use of this function is for debugging and introspection.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":16972,"byte_end":17041,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17046,"byte_end":17049,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17054,"byte_end":17066,"line_start":427,"line_end":427,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17071,"byte_end":17074,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ If `ptr` is null, 0 is returned.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17079,"byte_end":17115,"line_start":429,"line_end":429,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17120,"byte_end":17123,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17128,"byte_end":17140,"line_start":431,"line_end":431,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17145,"byte_end":17148,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17153,"byte_end":17188,"line_start":433,"line_end":433,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17193,"byte_end":17196,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ * `ptr` does not match a pointer earlier returned by the memory","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17201,"byte_end":17268,"line_start":435,"line_end":435,"column_start":5,"column_end":72}},{"value":"/   allocation functions of this crate, or","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17273,"byte_end":17317,"line_start":436,"line_end":436,"column_start":5,"column_end":49}},{"value":"/ * the memory region referenced by `ptr` has been deallocated.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17322,"byte_end":17387,"line_start":437,"line_end":437,"column_start":5,"column_end":70}},{"value":"link_name = \"_rjem_malloc_usable_size\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17413,"byte_end":17451,"line_start":438,"line_end":438,"column_start":26,"column_end":64}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":43},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19012,"byte_end":19019,"line_start":472,"line_end":472,"column_start":12,"column_end":19},"name":"mallctl","qualname":"::mallctl","value":"pub unsafe extern \"C\" fn mallctl(name: *const c_char, oldp: *mut c_void,\n                                 oldlenp: *mut size_t, newp: *mut c_void,\n                                 newlen: size_t) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" General interface for introspecting the memory allocator, as well as\n setting modifiable parameters and triggering actions.","sig":null,"attributes":[{"value":"/ General interface for introspecting the memory allocator, as well as","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17520,"byte_end":17592,"line_start":441,"line_end":441,"column_start":5,"column_end":77}},{"value":"/ setting modifiable parameters and triggering actions.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17597,"byte_end":17654,"line_start":442,"line_end":442,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17659,"byte_end":17662,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ The period-separated name argument specifies a location in a","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17667,"byte_end":17731,"line_start":444,"line_end":444,"column_start":5,"column_end":69}},{"value":"/ tree-structured namespace ([see jemalloc's `MALLCTL`","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17736,"byte_end":17792,"line_start":445,"line_end":445,"column_start":5,"column_end":61}},{"value":"/ documentation][jemalloc_mallctl]).","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17797,"byte_end":17835,"line_start":446,"line_end":446,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17840,"byte_end":17843,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ To read a value, pass a pointer via `oldp` to adequate space to contain","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17848,"byte_end":17923,"line_start":448,"line_end":448,"column_start":5,"column_end":80}},{"value":"/ the value, and a pointer to its length via `oldlenp``; otherwise pass","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":17928,"byte_end":18001,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/ null and null. Similarly, to write a value, pass a pointer to the value","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18006,"byte_end":18081,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ via `newp`, and its length via `newlen`; otherwise pass null and 0.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18086,"byte_end":18157,"line_start":451,"line_end":451,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18162,"byte_end":18165,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18170,"byte_end":18182,"line_start":453,"line_end":453,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18187,"byte_end":18190,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ Returns `0` on success, otherwise returns:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18195,"byte_end":18241,"line_start":455,"line_end":455,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18246,"byte_end":18249,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ * `EINVAL`: if `newp` is not null, and `newlen` is too large or too","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18254,"byte_end":18325,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ small. Alternatively, `*oldlenp` is too large or too small; in this case","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18330,"byte_end":18406,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ as much data as possible are read despite the error.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18411,"byte_end":18467,"line_start":459,"line_end":459,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18472,"byte_end":18475,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ * `ENOENT`: `name` or mib specifies an unknown/invalid value.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18480,"byte_end":18545,"line_start":461,"line_end":461,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18550,"byte_end":18553,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ * `EPERM`: Attempt to read or write void value, or attempt to write read-only value.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18558,"byte_end":18646,"line_start":463,"line_end":463,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18651,"byte_end":18654,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ * `EAGAIN`: A memory allocation failure occurred.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18659,"byte_end":18712,"line_start":465,"line_end":465,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18717,"byte_end":18720,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ * `EFAULT`: An interface with side effects failed in some way not","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18725,"byte_end":18794,"line_start":467,"line_end":467,"column_start":5,"column_end":74}},{"value":"/ directly related to `mallctl` read/write processing.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18799,"byte_end":18855,"line_start":468,"line_end":468,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18860,"byte_end":18863,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ [jemalloc_mallctl]: http://jemalloc.net/jemalloc.3.html#mallctl_namespace","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18868,"byte_end":18945,"line_start":470,"line_end":470,"column_start":5,"column_end":82}},{"value":"link_name = \"_rjem_mallctl\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":18971,"byte_end":18998,"line_start":471,"line_end":471,"column_start":26,"column_end":53}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":44},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20084,"byte_end":20100,"line_start":494,"line_end":494,"column_start":12,"column_end":28},"name":"mallctlnametomib","qualname":"::mallctlnametomib","value":"pub unsafe extern \"C\" fn mallctlnametomib(name: *const c_char,\n                                          mibp: *mut size_t,\n                                          miblenp: *mut size_t) -> c_int","parent":null,"children":[],"decl_id":null,"docs":" Translates a name to a “Management Information Base” (MIB) that can be\n passed repeatedly to [`mallctlbymib`].","sig":null,"attributes":[{"value":"/ Translates a name to a “Management Information Base” (MIB) that can be","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19178,"byte_end":19256,"line_start":479,"line_end":479,"column_start":5,"column_end":79}},{"value":"/ passed repeatedly to [`mallctlbymib`].","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19261,"byte_end":19303,"line_start":480,"line_end":480,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19308,"byte_end":19311,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ This avoids repeated name lookups for applications that repeatedly query","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19316,"byte_end":19392,"line_start":482,"line_end":482,"column_start":5,"column_end":81}},{"value":"/ the same portion of the namespace.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19397,"byte_end":19435,"line_start":483,"line_end":483,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19440,"byte_end":19443,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ On success, `mibp` contains an array of `*miblenp` integers, where","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19448,"byte_end":19518,"line_start":485,"line_end":485,"column_start":5,"column_end":75}},{"value":"/ `*miblenp` is the lesser of the number of components in name and the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19523,"byte_end":19595,"line_start":486,"line_end":486,"column_start":5,"column_end":77}},{"value":"/ input value of `*miblenp`. Thus it is possible to pass a `*miblenp` that is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19600,"byte_end":19679,"line_start":487,"line_end":487,"column_start":5,"column_end":84}},{"value":"/ smaller than the number of period-separated name components, which","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19684,"byte_end":19754,"line_start":488,"line_end":488,"column_start":5,"column_end":75}},{"value":"/ results in a partial MIB that can be used as the basis for constructing","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19759,"byte_end":19834,"line_start":489,"line_end":489,"column_start":5,"column_end":80}},{"value":"/ a complete MIB. For name components that are integers (e.g. the 2 in","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19839,"byte_end":19911,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ arenas.bin.2.size), the corresponding MIB component will always be that","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19916,"byte_end":19991,"line_start":491,"line_end":491,"column_start":5,"column_end":80}},{"value":"/ integer.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":19996,"byte_end":20008,"line_start":492,"line_end":492,"column_start":5,"column_end":17}},{"value":"link_name = \"_rjem_mallctlnametomib\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20034,"byte_end":20070,"line_start":493,"line_end":493,"column_start":26,"column_end":62}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":45},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20317,"byte_end":20329,"line_start":498,"line_end":498,"column_start":12,"column_end":24},"name":"mallctlbymib","qualname":"::mallctlbymib","value":"pub unsafe extern \"C\" fn mallctlbymib(mib: *const size_t, miblen: size_t,\n                                      oldp: *mut c_void, oldpenp: *mut size_t,\n                                      newp: *mut c_void, newlen: size_t)\n-> c_int","parent":null,"children":[],"decl_id":null,"docs":" Like [`mallctl`] but taking a `mib` as input instead of a name.\n","sig":null,"attributes":[{"value":"/ Like [`mallctl`] but taking a `mib` as input instead of a name.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20178,"byte_end":20245,"line_start":496,"line_end":496,"column_start":5,"column_end":72}},{"value":"link_name = \"_rjem_mallctlbymib\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20271,"byte_end":20303,"line_start":497,"line_end":497,"column_start":26,"column_end":58}}]},{"kind":"ForeignFunction","id":{"krate":0,"index":46},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22018,"byte_end":22036,"line_start":535,"line_end":535,"column_start":12,"column_end":30},"name":"malloc_stats_print","qualname":"::malloc_stats_print","value":"pub unsafe extern \"C\" fn malloc_stats_print(write_cb:\n                                                Option<unsafe extern \"C\" fn(:\n                                                                                *mut c_void,\n                                                                            :\n                                                                                *const c_char)>,\n                                            cbopaque: *mut c_void,\n                                            opts: *const c_char)","parent":null,"children":[],"decl_id":null,"docs":" Writes summary statistics via the `write_cb` callback function pointer\n and `cbopaque` data passed to `write_cb`, or [`malloc_message`] if `write_cb`\n is null.","sig":null,"attributes":[{"value":"/ Writes summary statistics via the `write_cb` callback function pointer","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20512,"byte_end":20586,"line_start":507,"line_end":507,"column_start":5,"column_end":79}},{"value":"/ and `cbopaque` data passed to `write_cb`, or [`malloc_message`] if `write_cb`","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20591,"byte_end":20672,"line_start":508,"line_end":508,"column_start":5,"column_end":86}},{"value":"/ is null.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20677,"byte_end":20689,"line_start":509,"line_end":509,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20694,"byte_end":20697,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ The statistics are presented in human-readable form unless “J”","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20702,"byte_end":20772,"line_start":511,"line_end":511,"column_start":5,"column_end":71}},{"value":"/ is specified as a character within the opts string, in which case the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20777,"byte_end":20850,"line_start":512,"line_end":512,"column_start":5,"column_end":78}},{"value":"/ statistics are presented in JSON format.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20855,"byte_end":20899,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20904,"byte_end":20907,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This function can be called repeatedly.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20912,"byte_end":20955,"line_start":515,"line_end":515,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20960,"byte_end":20963,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ General information that never changes during execution can be omitted","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":20968,"byte_end":21042,"line_start":517,"line_end":517,"column_start":5,"column_end":79}},{"value":"/ by specifying `g` as a character within the opts string.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21047,"byte_end":21107,"line_start":518,"line_end":518,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21112,"byte_end":21115,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that [`malloc_message`] uses the `mallctl*` functions internally,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21120,"byte_end":21194,"line_start":520,"line_end":520,"column_start":5,"column_end":79}},{"value":"/ so inconsistent statistics can be reported if multiple threads use these","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21199,"byte_end":21275,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ functions simultaneously.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21280,"byte_end":21309,"line_start":522,"line_end":522,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21314,"byte_end":21317,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ If the Cargo feature `stats` is enabled, `m`, `d`, and `a` can be","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21322,"byte_end":21391,"line_start":524,"line_end":524,"column_start":5,"column_end":74}},{"value":"/ specified to omit merged arena, destroyed merged arena, and per arena","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21396,"byte_end":21469,"line_start":525,"line_end":525,"column_start":5,"column_end":78}},{"value":"/ statistics, respectively; `b` and `l` can be specified to omit per size","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21474,"byte_end":21549,"line_start":526,"line_end":526,"column_start":5,"column_end":80}},{"value":"/ class statistics for bins and large objects, respectively; `x` can be","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21554,"byte_end":21627,"line_start":527,"line_end":527,"column_start":5,"column_end":78}},{"value":"/ specified to omit all mutex statistics. Unrecognized characters are","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21632,"byte_end":21703,"line_start":528,"line_end":528,"column_start":5,"column_end":76}},{"value":"/ silently ignored.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21708,"byte_end":21729,"line_start":529,"line_end":529,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21734,"byte_end":21737,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Note that thread caching may prevent some statistics from being","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21742,"byte_end":21809,"line_start":531,"line_end":531,"column_start":5,"column_end":72}},{"value":"/ completely up to date, since extra locking would be required to merge","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21814,"byte_end":21887,"line_start":532,"line_end":532,"column_start":5,"column_end":78}},{"value":"/ counters that track thread cache operations.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21892,"byte_end":21940,"line_start":533,"line_end":533,"column_start":5,"column_end":53}},{"value":"link_name = \"_rjem_malloc_stats_print\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":21966,"byte_end":22004,"line_start":534,"line_end":534,"column_start":26,"column_end":64}}]},{"kind":"ForeignStatic","id":{"krate":0,"index":47},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22813,"byte_end":22827,"line_start":552,"line_end":552,"column_start":20,"column_end":34},"name":"malloc_message","qualname":"::malloc_message","value":"Option<unsafe extern \"C\" fn(cbopaque: *mut c_void, s: *const c_char)>","parent":null,"children":[],"decl_id":null,"docs":" Allows overriding the function which emits the text strings forming the\n errors and warnings if for some reason the `STDERR_FILENO` file descriptor\n is not suitable for this.","sig":null,"attributes":[{"value":"/ Allows overriding the function which emits the text strings forming the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22186,"byte_end":22261,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ errors and warnings if for some reason the `STDERR_FILENO` file descriptor","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22266,"byte_end":22344,"line_start":542,"line_end":542,"column_start":5,"column_end":83}},{"value":"/ is not suitable for this.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22349,"byte_end":22378,"line_start":543,"line_end":543,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22383,"byte_end":22386,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ [`malloc_message`] takes the `cbopaque` pointer argument that is null,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22391,"byte_end":22465,"line_start":545,"line_end":545,"column_start":5,"column_end":79}},{"value":"/ unless overridden by the arguments in a call to [`malloc_stats_print`],","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22470,"byte_end":22545,"line_start":546,"line_end":546,"column_start":5,"column_end":80}},{"value":"/ followed by a string pointer.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22550,"byte_end":22583,"line_start":547,"line_end":547,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22588,"byte_end":22591,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ Please note that doing anything which tries to allocate memory in this","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22596,"byte_end":22670,"line_start":549,"line_end":549,"column_start":5,"column_end":79}},{"value":"/ function is likely to result in a crash or deadlock.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22675,"byte_end":22731,"line_start":550,"line_end":550,"column_start":5,"column_end":61}},{"value":"link_name = \"_rjem_malloc_message\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22757,"byte_end":22791,"line_start":551,"line_end":551,"column_start":26,"column_end":60}}]},{"kind":"ForeignStatic","id":{"krate":0,"index":48},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24542,"byte_end":24553,"line_start":582,"line_end":582,"column_start":16,"column_end":27},"name":"malloc_conf","qualname":"::malloc_conf","value":"Option<&'static c_char>","parent":null,"children":[],"decl_id":null,"docs":" Compile-time string of configuration options.","sig":null,"attributes":[{"value":"/ Compile-time string of configuration options.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22913,"byte_end":22962,"line_start":555,"line_end":555,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22967,"byte_end":22970,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ Once, when the first call is made to one of the memory allocation","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":22975,"byte_end":23044,"line_start":557,"line_end":557,"column_start":5,"column_end":74}},{"value":"/ routines, the allocator initializes its internals based in part on","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23049,"byte_end":23119,"line_start":558,"line_end":558,"column_start":5,"column_end":75}},{"value":"/ various options that can be specified at compile- or run-time.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23124,"byte_end":23190,"line_start":559,"line_end":559,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23195,"byte_end":23198,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ The string specified via `--with-malloc-conf`, the string pointed to by","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23203,"byte_end":23278,"line_start":561,"line_end":561,"column_start":5,"column_end":80}},{"value":"/ the global variable `malloc_conf`, the “name” of the file referenced by","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23283,"byte_end":23362,"line_start":562,"line_end":562,"column_start":5,"column_end":80}},{"value":"/ the symbolic link named `/etc/malloc.conf`, and the value of the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23367,"byte_end":23435,"line_start":563,"line_end":563,"column_start":5,"column_end":73}},{"value":"/ environment variable `MALLOC_CONF`, will be interpreted, in that order,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23440,"byte_end":23515,"line_start":564,"line_end":564,"column_start":5,"column_end":80}},{"value":"/ from left to right as options. Note that `malloc_conf` may be read","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23520,"byte_end":23590,"line_start":565,"line_end":565,"column_start":5,"column_end":75}},{"value":"/ before `main()` is entered, so the declaration of `malloc_conf` should","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23595,"byte_end":23669,"line_start":566,"line_end":566,"column_start":5,"column_end":79}},{"value":"/ specify an initializer that contains the final value to be read by","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23674,"byte_end":23744,"line_start":567,"line_end":567,"column_start":5,"column_end":75}},{"value":"/ `jemalloc`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23749,"byte_end":23764,"line_start":568,"line_end":568,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23769,"byte_end":23772,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ `--with-malloc-conf` and `malloc_conf` are compile-time mechanisms, whereas","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23777,"byte_end":23856,"line_start":570,"line_end":570,"column_start":5,"column_end":84}},{"value":"/ `/etc/malloc.conf` and `MALLOC_CONF` can be safely set any time prior to","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23861,"byte_end":23937,"line_start":571,"line_end":571,"column_start":5,"column_end":81}},{"value":"/ program invocation.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23942,"byte_end":23965,"line_start":572,"line_end":572,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23970,"byte_end":23973,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ An options string is a comma-separated list of `option:value` pairs.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":23978,"byte_end":24050,"line_start":574,"line_end":574,"column_start":5,"column_end":77}},{"value":"/ There is one key corresponding to each `opt.* mallctl` (see the `MALLCTL","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24055,"byte_end":24131,"line_start":575,"line_end":575,"column_start":5,"column_end":81}},{"value":"/ NAMESPACE` section for options documentation). For example,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24136,"byte_end":24199,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ `abort:true,narenas:1` sets the `opt.abort` and `opt.narenas` options.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24204,"byte_end":24278,"line_start":577,"line_end":577,"column_start":5,"column_end":79}},{"value":"/ Some options have boolean values (`true`/`false`), others have integer","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24283,"byte_end":24357,"line_start":578,"line_end":578,"column_start":5,"column_end":79}},{"value":"/ values (base `8`, `10`, or `16`, depending on prefix), and yet others","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24362,"byte_end":24435,"line_start":579,"line_end":579,"column_start":5,"column_end":78}},{"value":"/ have raw string values.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24440,"byte_end":24467,"line_start":580,"line_end":580,"column_start":5,"column_end":32}},{"value":"link_name = \"_rjem_malloc_conf\"","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24493,"byte_end":24524,"line_start":581,"line_end":581,"column_start":26,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24634,"byte_end":24648,"line_start":586,"line_end":586,"column_start":10,"column_end":24},"name":"extent_hooks_t","qualname":"::extent_hooks_t","value":"extent_hooks_s","parent":null,"children":[],"decl_id":null,"docs":" Extent lifetime management functions.\n","sig":null,"attributes":[{"value":"/ Extent lifetime management functions.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":24583,"byte_end":24624,"line_start":585,"line_end":585,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25246,"byte_end":25260,"line_start":602,"line_end":602,"column_start":12,"column_end":26},"name":"extent_hooks_s","qualname":"::extent_hooks_s","value":"extent_hooks_s { alloc, dalloc, destroy, commit, decommit, purge_lazy, purge_forced, split, merge }","parent":null,"children":[{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":66},{"krate":0,"index":67}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25123,"byte_end":25133,"line_start":597,"line_end":597,"column_start":1,"column_end":11}},{"value":"cfg(not(jemallocator_docs))","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25134,"byte_end":25164,"line_start":598,"line_end":598,"column_start":1,"column_end":31}},{"value":"allow(missing_docs)","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25212,"byte_end":25234,"line_start":601,"line_end":601,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":59},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25271,"byte_end":25276,"line_start":603,"line_end":603,"column_start":9,"column_end":14},"name":"alloc","qualname":"::extent_hooks_s::alloc","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, usize, *mut i32, *mut i32, u32) -> *mut libc::c_void>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":60},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25525,"byte_end":25531,"line_start":614,"line_end":614,"column_start":9,"column_end":15},"name":"dalloc","qualname":"::extent_hooks_s::dalloc","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, i32, u32) -> i32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":61},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25654,"byte_end":25661,"line_start":617,"line_end":617,"column_start":9,"column_end":16},"name":"destroy","qualname":"::extent_hooks_s::destroy","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, i32, u32)>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":62},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25767,"byte_end":25773,"line_start":619,"line_end":619,"column_start":9,"column_end":15},"name":"commit","qualname":"::extent_hooks_s::commit","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, usize, usize, u32) -> i32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":63},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":25987,"byte_end":25995,"line_start":629,"line_end":629,"column_start":9,"column_end":17},"name":"decommit","qualname":"::extent_hooks_s::decommit","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, usize, usize, u32) -> i32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":64},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":26209,"byte_end":26219,"line_start":639,"line_end":639,"column_start":9,"column_end":19},"name":"purge_lazy","qualname":"::extent_hooks_s::purge_lazy","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, usize, usize, u32) -> i32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":65},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":26433,"byte_end":26445,"line_start":649,"line_end":649,"column_start":9,"column_end":21},"name":"purge_forced","qualname":"::extent_hooks_s::purge_forced","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, usize, usize, u32) -> i32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":66},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":26659,"byte_end":26664,"line_start":659,"line_end":659,"column_start":9,"column_end":14},"name":"split","qualname":"::extent_hooks_s::split","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, usize, usize, i32, u32) -> i32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":67},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":26898,"byte_end":26903,"line_start":670,"line_end":670,"column_start":9,"column_end":14},"name":"merge","qualname":"::extent_hooks_s::merge","value":"core::option::Option<unsafe extern \"C\" fn(*mut extent_hooks_s, *mut libc::c_void, usize, *mut libc::c_void, usize, i32, u32) -> i32>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":50},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30139,"byte_end":30153,"line_start":749,"line_end":749,"column_start":10,"column_end":24},"name":"extent_alloc_t","qualname":"::extent_alloc_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, new_addr: *mut c_void,\n                     size: size_t, alignment: size_t, zero: *mut c_bool,\n                     commit: *mut c_bool, arena_ind: c_uint) -> *mut c_void","parent":null,"children":[],"decl_id":null,"docs":" Extent allocation function.","sig":null,"attributes":[{"value":"/ Extent allocation function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":28883,"byte_end":28914,"line_start":722,"line_end":722,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":28915,"byte_end":28918,"line_start":723,"line_end":723,"column_start":1,"column_end":4}},{"value":"/ On success returns a pointer to `size` bytes of mapped memory on behalf of","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":28919,"byte_end":28997,"line_start":724,"line_end":724,"column_start":1,"column_end":79}},{"value":"/ arena `arena_ind` such that the extent's base address is a multiple of","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":28998,"byte_end":29072,"line_start":725,"line_end":725,"column_start":1,"column_end":75}},{"value":"/ `alignment`, as well as setting `*zero` to indicate whether the extent is","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29073,"byte_end":29150,"line_start":726,"line_end":726,"column_start":1,"column_end":78}},{"value":"/ zeroed and `*commit` to indicate whether the extent is committed.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29151,"byte_end":29220,"line_start":727,"line_end":727,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29221,"byte_end":29224,"line_start":728,"line_end":728,"column_start":1,"column_end":4}},{"value":"/ Zeroing is mandatory if `*zero` is `true` upon function entry. Committing is mandatory if","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29225,"byte_end":29318,"line_start":729,"line_end":729,"column_start":1,"column_end":94}},{"value":"/ `*commit` is true upon function entry. If `new_addr` is not null, the returned","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29319,"byte_end":29401,"line_start":730,"line_end":730,"column_start":1,"column_end":83}},{"value":"/ pointer must be `new_addr` on success or null on error.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29402,"byte_end":29461,"line_start":731,"line_end":731,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29462,"byte_end":29465,"line_start":732,"line_end":732,"column_start":1,"column_end":4}},{"value":"/ Committed memory may be committed in absolute terms as on a system that does","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29466,"byte_end":29546,"line_start":733,"line_end":733,"column_start":1,"column_end":81}},{"value":"/ not overcommit, or in implicit terms as on a system that overcommits and","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29547,"byte_end":29623,"line_start":734,"line_end":734,"column_start":1,"column_end":77}},{"value":"/ satisfies physical memory needs on demand via soft page faults. Note that","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29624,"byte_end":29701,"line_start":735,"line_end":735,"column_start":1,"column_end":78}},{"value":"/ replacing the default extent allocation function makes the arena's","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29702,"byte_end":29772,"line_start":736,"line_end":736,"column_start":1,"column_end":71}},{"value":"/ `arena.<i>.dss` setting irrelevant.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29773,"byte_end":29812,"line_start":737,"line_end":737,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29813,"byte_end":29816,"line_start":738,"line_end":738,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29817,"byte_end":29829,"line_start":739,"line_end":739,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29830,"byte_end":29833,"line_start":740,"line_end":740,"column_start":1,"column_end":4}},{"value":"/ On error the function returns null and leaves `*zero` and `*commit` unmodified.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29834,"byte_end":29917,"line_start":741,"line_end":741,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29918,"byte_end":29921,"line_start":742,"line_end":742,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29922,"byte_end":29934,"line_start":743,"line_end":743,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29935,"byte_end":29938,"line_start":744,"line_end":744,"column_start":1,"column_end":4}},{"value":"/ The behavior is _undefined_ if:","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29939,"byte_end":29974,"line_start":745,"line_end":745,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29975,"byte_end":29978,"line_start":746,"line_end":746,"column_start":1,"column_end":4}},{"value":"/ * the `size` parameter is not a multiple of the page size","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":29979,"byte_end":30040,"line_start":747,"line_end":747,"column_start":1,"column_end":62}},{"value":"/ * the `alignment` parameter is not a power of two at least as large as the page size","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30041,"byte_end":30129,"line_start":748,"line_end":748,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":51},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30881,"byte_end":30896,"line_start":769,"line_end":769,"column_start":10,"column_end":25},"name":"extent_dalloc_t","qualname":"::extent_dalloc_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, addr: *mut c_void,\n                     size: size_t, committed: c_bool, arena_ind: c_uint)\n    -> c_bool","parent":null,"children":[],"decl_id":null,"docs":" Extent deallocation function.","sig":null,"attributes":[{"value":"/ Extent deallocation function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30375,"byte_end":30408,"line_start":759,"line_end":759,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30409,"byte_end":30412,"line_start":760,"line_end":760,"column_start":1,"column_end":4}},{"value":"/ Deallocates an extent at given `addr` and `size` with `committed`/decommited","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30413,"byte_end":30493,"line_start":761,"line_end":761,"column_start":1,"column_end":81}},{"value":"/ memory as indicated, on behalf of arena `arena_ind`, returning `false` upon","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30494,"byte_end":30573,"line_start":762,"line_end":762,"column_start":1,"column_end":80}},{"value":"/ success.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30574,"byte_end":30586,"line_start":763,"line_end":763,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30587,"byte_end":30590,"line_start":764,"line_end":764,"column_start":1,"column_end":4}},{"value":"/ If the function returns `true`, this indicates opt-out from deallocation;","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30591,"byte_end":30668,"line_start":765,"line_end":765,"column_start":1,"column_end":78}},{"value":"/ the virtual memory mapping associated with the extent remains mapped, in the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30669,"byte_end":30749,"line_start":766,"line_end":766,"column_start":1,"column_end":81}},{"value":"/ same commit state, and available for future use, in which case it will be","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30750,"byte_end":30827,"line_start":767,"line_end":767,"column_start":1,"column_end":78}},{"value":"/ automatically retained for later reuse.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":30828,"byte_end":30871,"line_start":768,"line_end":768,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31378,"byte_end":31394,"line_start":784,"line_end":784,"column_start":10,"column_end":26},"name":"extent_destroy_t","qualname":"::extent_destroy_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, addr: *mut c_void,\n                     size: size_t, committed: c_bool, arena_ind: c_uint)","parent":null,"children":[],"decl_id":null,"docs":" Extent destruction function.","sig":null,"attributes":[{"value":"/ Extent destruction function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31061,"byte_end":31093,"line_start":777,"line_end":777,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31094,"byte_end":31097,"line_start":778,"line_end":778,"column_start":1,"column_end":4}},{"value":"/ Unconditionally destroys an extent at given `addr` and `size` with","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31098,"byte_end":31168,"line_start":779,"line_end":779,"column_start":1,"column_end":71}},{"value":"/ `committed`/decommited memory as indicated, on behalf of arena `arena_ind`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31169,"byte_end":31248,"line_start":780,"line_end":780,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31249,"byte_end":31252,"line_start":781,"line_end":781,"column_start":1,"column_end":4}},{"value":"/ This function may be called to destroy retained extents during arena","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31253,"byte_end":31325,"line_start":782,"line_end":782,"column_start":1,"column_end":73}},{"value":"/ destruction (see `arena.<i>.destroy`).","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31326,"byte_end":31368,"line_start":783,"line_end":783,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":53},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32135,"byte_end":32150,"line_start":803,"line_end":803,"column_start":10,"column_end":25},"name":"extent_commit_t","qualname":"::extent_commit_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, addr: *mut c_void,\n                     size: size_t, offset: size_t, length: size_t,\n                     arena_ind: c_uint) -> c_bool","parent":null,"children":[],"decl_id":null,"docs":" Extent commit function.","sig":null,"attributes":[{"value":"/ Extent commit function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31549,"byte_end":31576,"line_start":792,"line_end":792,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31577,"byte_end":31580,"line_start":793,"line_end":793,"column_start":1,"column_end":4}},{"value":"/ Commits zeroed physical memory to back pages within an extent at given","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31581,"byte_end":31655,"line_start":794,"line_end":794,"column_start":1,"column_end":75}},{"value":"/ `addr` and `size` at `offset` bytes, extending for `length` on behalf of","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31656,"byte_end":31732,"line_start":795,"line_end":795,"column_start":1,"column_end":77}},{"value":"/ arena `arena_ind`, returning `false` upon success.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31733,"byte_end":31787,"line_start":796,"line_end":796,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31788,"byte_end":31791,"line_start":797,"line_end":797,"column_start":1,"column_end":4}},{"value":"/ Committed memory may be committed in absolute terms as on a system that does","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31792,"byte_end":31872,"line_start":798,"line_end":798,"column_start":1,"column_end":81}},{"value":"/ not overcommit, or in implicit terms as on a system that overcommits and","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31873,"byte_end":31949,"line_start":799,"line_end":799,"column_start":1,"column_end":77}},{"value":"/ satisfies physical memory needs on demand via soft page faults. If the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":31950,"byte_end":32024,"line_start":800,"line_end":800,"column_start":1,"column_end":75}},{"value":"/ function returns `true`, this indicates insufficient physical memory to","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32025,"byte_end":32100,"line_start":801,"line_end":801,"column_start":1,"column_end":76}},{"value":"/ satisfy the request.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32101,"byte_end":32125,"line_start":802,"line_end":802,"column_start":1,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32897,"byte_end":32914,"line_start":822,"line_end":822,"column_start":10,"column_end":27},"name":"extent_decommit_t","qualname":"::extent_decommit_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, addr: *mut c_void,\n                     size: size_t, offset: size_t, length: size_t,\n                     arena_ind: c_uint) -> c_bool","parent":null,"children":[],"decl_id":null,"docs":" Extent decommit function.","sig":null,"attributes":[{"value":"/ Extent decommit function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32332,"byte_end":32361,"line_start":812,"line_end":812,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32362,"byte_end":32365,"line_start":813,"line_end":813,"column_start":1,"column_end":4}},{"value":"/ Decommits any physical memory that is backing pages within an extent at","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32366,"byte_end":32441,"line_start":814,"line_end":814,"column_start":1,"column_end":76}},{"value":"/ given `addr` and `size` at `offset` bytes, extending for `length` on behalf of arena","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32442,"byte_end":32530,"line_start":815,"line_end":815,"column_start":1,"column_end":89}},{"value":"/ `arena_ind`, returning `false` upon success, in which case the pages will be","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32531,"byte_end":32611,"line_start":816,"line_end":816,"column_start":1,"column_end":81}},{"value":"/ committed via the extent commit function before being reused.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32612,"byte_end":32677,"line_start":817,"line_end":817,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32678,"byte_end":32681,"line_start":818,"line_end":818,"column_start":1,"column_end":4}},{"value":"/ If the function returns `true`, this indicates opt-out from decommit; the","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32682,"byte_end":32759,"line_start":819,"line_end":819,"column_start":1,"column_end":78}},{"value":"/ memory remains committed and available for future use, in which case it will","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32760,"byte_end":32840,"line_start":820,"line_end":820,"column_start":1,"column_end":81}},{"value":"/ be automatically retained for later reuse.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":32841,"byte_end":32887,"line_start":821,"line_end":821,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":55},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33777,"byte_end":33791,"line_start":843,"line_end":843,"column_start":10,"column_end":24},"name":"extent_purge_t","qualname":"::extent_purge_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, addr: *mut c_void,\n                     size: size_t, offset: size_t, length: size_t,\n                     arena_ind: c_uint) -> c_bool","parent":null,"children":[],"decl_id":null,"docs":" Extent purge function.","sig":null,"attributes":[{"value":"/ Extent purge function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33096,"byte_end":33122,"line_start":831,"line_end":831,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33123,"byte_end":33126,"line_start":832,"line_end":832,"column_start":1,"column_end":4}},{"value":"/ Discards physical pages within the virtual memory mapping associated with an","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33127,"byte_end":33207,"line_start":833,"line_end":833,"column_start":1,"column_end":81}},{"value":"/ extent at given `addr` and `size` at `offset` bytes, extending for `length` on","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33208,"byte_end":33290,"line_start":834,"line_end":834,"column_start":1,"column_end":83}},{"value":"/ behalf of arena `arena_ind`.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33291,"byte_end":33323,"line_start":835,"line_end":835,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33324,"byte_end":33327,"line_start":836,"line_end":836,"column_start":1,"column_end":4}},{"value":"/ A lazy extent purge function (e.g. implemented via `madvise(...MADV_FREE)`)","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33328,"byte_end":33407,"line_start":837,"line_end":837,"column_start":1,"column_end":80}},{"value":"/ can delay purging indefinitely and leave the pages within the purged virtual","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33408,"byte_end":33488,"line_start":838,"line_end":838,"column_start":1,"column_end":81}},{"value":"/ memory range in an indeterminite state, whereas a forced extent purge","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33489,"byte_end":33562,"line_start":839,"line_end":839,"column_start":1,"column_end":74}},{"value":"/ function immediately purges, and the pages within the virtual memory range","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33563,"byte_end":33641,"line_start":840,"line_end":840,"column_start":1,"column_end":79}},{"value":"/ will be zero-filled the next time they are accessed. If the function returns","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33642,"byte_end":33722,"line_start":841,"line_end":841,"column_start":1,"column_end":81}},{"value":"/ `true`, this indicates failure to purge.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33723,"byte_end":33767,"line_start":842,"line_end":842,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":56},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34447,"byte_end":34461,"line_start":861,"line_end":861,"column_start":10,"column_end":24},"name":"extent_split_t","qualname":"::extent_split_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, addr: *mut c_void,\n                     size: size_t, size_a: size_t, size_b: size_t,\n                     committed: c_bool, arena_ind: c_uint) -> c_bool","parent":null,"children":[],"decl_id":null,"docs":" Extent split function.","sig":null,"attributes":[{"value":"/ Extent split function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":33973,"byte_end":33999,"line_start":852,"line_end":852,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34000,"byte_end":34003,"line_start":853,"line_end":853,"column_start":1,"column_end":4}},{"value":"/ Optionally splits an extent at given `addr` and `size` into two adjacent","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34004,"byte_end":34080,"line_start":854,"line_end":854,"column_start":1,"column_end":77}},{"value":"/ extents, the first of `size_a` bytes, and the second of `size_b` bytes,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34081,"byte_end":34156,"line_start":855,"line_end":855,"column_start":1,"column_end":76}},{"value":"/ operating on `committed`/decommitted memory as indicated, on behalf of arena","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34157,"byte_end":34237,"line_start":856,"line_end":856,"column_start":1,"column_end":81}},{"value":"/ `arena_ind`, returning `false` upon success.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34238,"byte_end":34286,"line_start":857,"line_end":857,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34287,"byte_end":34290,"line_start":858,"line_end":858,"column_start":1,"column_end":4}},{"value":"/ If the function returns `true`, this indicates that the extent remains","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34291,"byte_end":34365,"line_start":859,"line_end":859,"column_start":1,"column_end":75}},{"value":"/ unsplit and therefore should continue to be operated on as a whole.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34366,"byte_end":34437,"line_start":860,"line_end":860,"column_start":1,"column_end":72}}]},{"kind":"Type","id":{"krate":0,"index":57},"span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":35140,"byte_end":35154,"line_start":881,"line_end":881,"column_start":10,"column_end":24},"name":"extent_merge_t","qualname":"::extent_merge_t","value":"unsafe extern \"C\" fn(extent_hooks: *mut extent_hooks_t, addr_a: *mut c_void,\n                     size_a: size_t, addr_b: *mut c_void, size_b: size_t,\n                     committed: c_bool, arena_ind: c_uint) -> c_bool","parent":null,"children":[],"decl_id":null,"docs":" Extent merge function.","sig":null,"attributes":[{"value":"/ Extent merge function.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34666,"byte_end":34692,"line_start":871,"line_end":871,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34693,"byte_end":34696,"line_start":872,"line_end":872,"column_start":1,"column_end":4}},{"value":"/ Optionally merges adjacent extents, at given `addr_a` and `size_a` with given","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34697,"byte_end":34778,"line_start":873,"line_end":873,"column_start":1,"column_end":82}},{"value":"/ `addr_b` and `size_b` into one contiguous extent, operating on","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34779,"byte_end":34845,"line_start":874,"line_end":874,"column_start":1,"column_end":67}},{"value":"/ `committed`/decommitted memory as indicated, on behalf of arena `arena_ind`,","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34846,"byte_end":34926,"line_start":875,"line_end":875,"column_start":1,"column_end":81}},{"value":"/ returning `false` upon success.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34927,"byte_end":34962,"line_start":876,"line_end":876,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34963,"byte_end":34966,"line_start":877,"line_end":877,"column_start":1,"column_end":4}},{"value":"/ If the function returns `true`, this indicates that the extents remain","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":34967,"byte_end":35041,"line_start":878,"line_end":878,"column_start":1,"column_end":75}},{"value":"/ distinct mappings and therefore should continue to be operated on","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":35042,"byte_end":35111,"line_start":879,"line_end":879,"column_start":1,"column_end":70}},{"value":"/ independently.","span":{"file_name":"/Users/andonmitev/.cargo/registry/src/github.com-1ecc6299db9ec823/jemalloc-sys-0.3.2/src/lib.rs","byte_start":35112,"byte_end":35130,"line_start":880,"line_end":880,"column_start":1,"column_end":19}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}